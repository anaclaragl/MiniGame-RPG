//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""PlayerControls"",
            ""id"": ""14633c24-bfa3-4865-a8c1-42693337059d"",
            ""actions"": [
                {
                    ""name"": ""Mov"",
                    ""type"": ""Value"",
                    ""id"": ""4c3dcbc6-5c59-4e2a-bc2c-bdd5aaa1363f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Value"",
                    ""id"": ""220128d7-9fd4-419d-8aa3-598fba5e7e58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dialogue"",
                    ""type"": ""Value"",
                    ""id"": ""13f9cdc1-c336-4278-8a68-6e0e08a8e1df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Re"",
                    ""type"": ""Value"",
                    ""id"": ""fdbd8124-91a5-4262-a217-39ef9fdb157d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""La"",
                    ""type"": ""Value"",
                    ""id"": ""809a911d-ca9d-4227-a2a3-5acdf8b8a579"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sol"",
                    ""type"": ""Value"",
                    ""id"": ""7f00e2eb-946b-42aa-8dc0-19a9e21c7c98"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mi"",
                    ""type"": ""Value"",
                    ""id"": ""428c6f1c-b006-4d85-adaa-e7c5a70df978"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Repeat"",
                    ""type"": ""Value"",
                    ""id"": ""ae93002d-25c7-4100-8f73-ba695d138ff6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Value"",
                    ""id"": ""bef0d21f-eb20-48b4-9685-4fae04291105"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""e2c5b66b-d136-4d6d-8aab-14f475413602"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mov"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d690c6f7-3551-447a-9709-95307e8f610f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mov"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""88fb27da-ab28-4655-98f2-0ddb35da0292"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mov"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eea19348-3755-40bc-b86f-ae3a5dab5e35"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mov"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b544d9d4-780f-43d8-9d94-7959f79d4efa"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mov"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2efefe5f-8d77-4a96-b6ae-35008ff9b43d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4efd8a6-eab5-4019-b04f-8019101c0315"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ce6e7a2-2ce8-4d4b-b361-5f3d342da488"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""La"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a25f3129-cc66-4435-965a-8e16a268db83"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Re"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""815f778f-d73f-40fc-8f6b-5477411cb0a7"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sol"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b005f85b-4027-4b23-ba4e-bc161e8e5a98"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mi"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d88c9b15-9bda-4b3c-8ad1-1867bb8608ce"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Repeat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7292ab19-a83b-4f74-b194-009cd3ce0c17"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControls
        m_PlayerControls = asset.FindActionMap("PlayerControls", throwIfNotFound: true);
        m_PlayerControls_Mov = m_PlayerControls.FindAction("Mov", throwIfNotFound: true);
        m_PlayerControls_Dash = m_PlayerControls.FindAction("Dash", throwIfNotFound: true);
        m_PlayerControls_Dialogue = m_PlayerControls.FindAction("Dialogue", throwIfNotFound: true);
        m_PlayerControls_Re = m_PlayerControls.FindAction("Re", throwIfNotFound: true);
        m_PlayerControls_La = m_PlayerControls.FindAction("La", throwIfNotFound: true);
        m_PlayerControls_Sol = m_PlayerControls.FindAction("Sol", throwIfNotFound: true);
        m_PlayerControls_Mi = m_PlayerControls.FindAction("Mi", throwIfNotFound: true);
        m_PlayerControls_Repeat = m_PlayerControls.FindAction("Repeat", throwIfNotFound: true);
        m_PlayerControls_Jump = m_PlayerControls.FindAction("Jump", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControls
    private readonly InputActionMap m_PlayerControls;
    private List<IPlayerControlsActions> m_PlayerControlsActionsCallbackInterfaces = new List<IPlayerControlsActions>();
    private readonly InputAction m_PlayerControls_Mov;
    private readonly InputAction m_PlayerControls_Dash;
    private readonly InputAction m_PlayerControls_Dialogue;
    private readonly InputAction m_PlayerControls_Re;
    private readonly InputAction m_PlayerControls_La;
    private readonly InputAction m_PlayerControls_Sol;
    private readonly InputAction m_PlayerControls_Mi;
    private readonly InputAction m_PlayerControls_Repeat;
    private readonly InputAction m_PlayerControls_Jump;
    public struct PlayerControlsActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerControlsActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mov => m_Wrapper.m_PlayerControls_Mov;
        public InputAction @Dash => m_Wrapper.m_PlayerControls_Dash;
        public InputAction @Dialogue => m_Wrapper.m_PlayerControls_Dialogue;
        public InputAction @Re => m_Wrapper.m_PlayerControls_Re;
        public InputAction @La => m_Wrapper.m_PlayerControls_La;
        public InputAction @Sol => m_Wrapper.m_PlayerControls_Sol;
        public InputAction @Mi => m_Wrapper.m_PlayerControls_Mi;
        public InputAction @Repeat => m_Wrapper.m_PlayerControls_Repeat;
        public InputAction @Jump => m_Wrapper.m_PlayerControls_Jump;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Add(instance);
            @Mov.started += instance.OnMov;
            @Mov.performed += instance.OnMov;
            @Mov.canceled += instance.OnMov;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Dialogue.started += instance.OnDialogue;
            @Dialogue.performed += instance.OnDialogue;
            @Dialogue.canceled += instance.OnDialogue;
            @Re.started += instance.OnRe;
            @Re.performed += instance.OnRe;
            @Re.canceled += instance.OnRe;
            @La.started += instance.OnLa;
            @La.performed += instance.OnLa;
            @La.canceled += instance.OnLa;
            @Sol.started += instance.OnSol;
            @Sol.performed += instance.OnSol;
            @Sol.canceled += instance.OnSol;
            @Mi.started += instance.OnMi;
            @Mi.performed += instance.OnMi;
            @Mi.canceled += instance.OnMi;
            @Repeat.started += instance.OnRepeat;
            @Repeat.performed += instance.OnRepeat;
            @Repeat.canceled += instance.OnRepeat;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
        }

        private void UnregisterCallbacks(IPlayerControlsActions instance)
        {
            @Mov.started -= instance.OnMov;
            @Mov.performed -= instance.OnMov;
            @Mov.canceled -= instance.OnMov;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Dialogue.started -= instance.OnDialogue;
            @Dialogue.performed -= instance.OnDialogue;
            @Dialogue.canceled -= instance.OnDialogue;
            @Re.started -= instance.OnRe;
            @Re.performed -= instance.OnRe;
            @Re.canceled -= instance.OnRe;
            @La.started -= instance.OnLa;
            @La.performed -= instance.OnLa;
            @La.canceled -= instance.OnLa;
            @Sol.started -= instance.OnSol;
            @Sol.performed -= instance.OnSol;
            @Sol.canceled -= instance.OnSol;
            @Mi.started -= instance.OnMi;
            @Mi.performed -= instance.OnMi;
            @Mi.canceled -= instance.OnMi;
            @Repeat.started -= instance.OnRepeat;
            @Repeat.performed -= instance.OnRepeat;
            @Repeat.canceled -= instance.OnRepeat;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
        }

        public void RemoveCallbacks(IPlayerControlsActions instance)
        {
            if (m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerControlsActions @PlayerControls => new PlayerControlsActions(this);
    public interface IPlayerControlsActions
    {
        void OnMov(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnDialogue(InputAction.CallbackContext context);
        void OnRe(InputAction.CallbackContext context);
        void OnLa(InputAction.CallbackContext context);
        void OnSol(InputAction.CallbackContext context);
        void OnMi(InputAction.CallbackContext context);
        void OnRepeat(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
}
